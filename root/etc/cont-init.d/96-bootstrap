#!/usr/bin/with-contenv bash

# Bootsrap config files
echo "**** BootStrap config files ****"

# Install oh-my-zsh if not installed already
if [ -d /config/.oh-my-zsh ]; then
    echo "**** Oh My Zsh is already installed. You can update it via \"omz update\" in terminal. ****"
else
    echo "**** Installing Oh My Zsh. You can update it via \"omz update\" in terminal. ****"
    mkdir -p /config/.local/bin
    curl -fsSL "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh" \
      -o /config/.local/bin/install_ohmyzsh.sh
    chmod +x /config/.local/bin/install_ohmyzsh.sh
    chown -R abc:abc /config/
    s6-setuidgid abc \
      /config/.local/bin/install_ohmyzsh.sh --unattended --keep-zshrc
fi

## Install ZSH Plugins
# Install Zsh syntax highlighting
if [ ! -d /config/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ]; then
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /config/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
fi
# install zsh completions
if [ ! -d /config/.oh-my-zsh/custom/plugins/zsh-completions ]; then
  git clone https://github.com/zsh-users/zsh-completions /config/.oh-my-zsh/custom/plugins/zsh-completions
fi
# install zsh-autosuggestions  
if [ ! -d /config/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions /config/.oh-my-zsh/custom/plugins/zsh-autosuggestions
fi
# install zsh-history-substring-search 
if [ ! -d /config/.oh-my-zsh/custom/plugins/zsh-history-substring-search ]; then
  git clone https://github.com/zsh-users/zsh-history-substring-search /config/.oh-my-zsh/custom/plugins/zsh-history-substring-search
fi

# Fix file permissions
chown -R abc:abc /config/

## Copy dot files to current home directory
DOT_FILES_DIR=${DOT_FILES_DIR:-/etc/dot_files}
SSH_KEYS_DIR=${SSH_KEYS_DIR:-/etc/ssh_keys}

# ZSHRC file
if [ -f $DOT_FILES_DIR/zshrc ]; then
  echo "**** BootStrap zshrc ****"
  cp -v $DOT_FILES_DIR/zshrc /config/.zshrc
  chown abc:abc /config/.zshrc
fi

# vscode settings file
if [ -f $DOT_FILES_DIR/vscode-settings.json ]; then
  echo "**** BootStrap vscodesettings ****"
  [ ! -d /config/data/User ] && mkdir -p /config/data/User
  cp -v $DOT_FILES_DIR/vscode-settings.json /config/data/User/settings.json
  chown -R abc:abc /config/data/User
fi

# kubeconfig file
if [ -f $DOT_FILES_DIR/kubeconfig ]; then
  echo "**** BootStrap kubeconfig ****"
  [ ! -d /config/.kube ] && mkdir -p /config/.kube
  cp -v $DOT_FILES_DIR/kubeconfig /config/.kube/config
  chmod 600 /config/.kube/config
  chown -R abc:abc /config/.kube
fi

# awscredentials file
if [ -f $DOT_FILES_DIR/awscredentials ]; then
  echo "**** BootStrap AWS credentials file ****"
  [ ! -d /config/.aws ] && mkdir -p /config/.aws
  cp -v $DOT_FILES_DIR/awscredentials /config/.aws/credentials
  chmod 640 /config/.aws/credentials
  chown -R abc:abc /config/.aws
fi

# gitconfig file
if [ -f $DOT_FILES_DIR/gitconfig ]; then
  echo "**** BootStrap gitconfig ****"
  cp -v $DOT_FILES_DIR/gitconfig /config/.gitconfig
  chown -R abc:abc /config/.gitconfig
fi

# ssh config
if [ -f $DOT_FILES_DIR/sshconfig ]; then
  echo "**** BootStrap sshconfig ****"
  [ ! -d /config/.ssh ] && mkdir -p /config/.ssh
  cp -v $DOT_FILES_DIR/sshconfig /config/.ssh/config
  chown -R abc:abc /config/.ssh
fi

## Copy ssh keys from $SSH_KEYS_DIR to /config/.ssh/
echo "**** Copy ssh keys from \"$SSH_KEYS_DIR\" to \"/config/.ssh/\" ****"
find $SSH_KEYS_DIR -type f | while read SSH_KEY_FILE; do
  [ ! -d /config/.ssh ] && mkdir -p /config/.ssh
  KEY_NAME=$(echo "$SSH_KEY_FILE" | awk -F "/" '{print $NF}')
  echo "**** Copy \"$KEY_NAME\" on \"/config/.ssh\" ****"
  cp -v $SSH_KEY_FILE /config/.ssh/$KEY_NAME
  chmod 400 /config/.ssh/$KEY_NAME
  chown -R abc:abc /config/.ssh
done
